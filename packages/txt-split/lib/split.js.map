{"version":3,"file":"split.js","sourceRoot":"","sources":["split.ts"],"names":[],"mappings":"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","sourcesContent":["import { fix_name, padIndex } from './util';\nimport {\n\tIContext,\n\tIDataChapter,\n\tIDataVolume,\n\tIOptions,\n\tISplitCache,\n\tISplitCB,\n\tISplitMatch,\n\tISplitMatchItem,\n\tIOptionsRequired, ISplitOption,\n} from './interface';\nimport { execall } from 'execall2';\nimport { console } from './console';\n\nexport function splitVolumeSync<O extends Partial<ISplitCache>>(txt: IContext, cache: O): IDataVolume\n{\n\tlet _vs: IDataChapter;\n\n\ttxt = String(txt);\n\n\tif (!cache || !cache.chapter || !cache.chapter.r)\n\t{\n\t\tthrow new RangeError(`options.chapter.r is required`)\n\t}\n\n\tif (cache.beforeStart)\n\t{\n\t\tcache.beforeStart(cache);\n\t}\n\n\tMAIN:\n\tif (cache.volume && !cache.volume.disable)\n\t{\n\t\tlet _r = cache.volume.r;\n\n\t\tlet _m = execall(_r, txt, {\n\t\t\tcloneRegexp,\n\t\t});\n\n\t\t//console.debug(_r, _m, txt);\n\t\t//console.debug(_r, _m, txt);\n\n\t\tif (!_m || !_m.length)\n\t\t{\n\t\t\tlet msg = `volume match is empty ${_r}`;\n\n\t\t\tconsole.warn(msg);\n\n\t\t\tif (!cache.volume.allowNoMatch)\n\t\t\t{\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\n\t\t\tbreak MAIN;\n\t\t}\n\n\t\t//console.log(_r, _m, _r.test(txt));\n\n\t\t_vs = splitChapterSync(txt, cache, _m, cache.volume);\n\t}\n\n\tif (!_vs)\n\t{\n\t\t_vs = {};\n\t\t_vs['00000_unknow'] = txt;\n\t}\n\n\tlet _out: IDataVolume = {};\n\n\tcache.ix = 0;\n\n\tfor (let vn in _vs)\n\t{\n\t\tlet txt = _vs[vn];\n\n\t\tlet _r = cache.chapter.r;\n\t\tlet _m = execall(_r, txt, {\n\t\t\tcloneRegexp,\n\t\t});\n\n\t\t//console.log(_r, _m, txt);\n\n\t\t//console.log(cache.ix);\n\n\t\tif (!_m || !_m.length)\n\t\t{\n\t\t\tlet id = padIndex(cache.ix++, 5, '0');\n\n\t\t\t_out[vn] = {};\n\n\t\t\t_out[vn][`${id}_unknow`] = txt;\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet _cs = splitChapterSync(txt, cache, _m, cache.chapter);\n\n\t\t_out[vn] = {};\n\n\t\tfor (let cn in _cs)\n\t\t{\n\t\t\t_out[vn][cn] = _cs[cn];\n\t\t}\n\t}\n\n\tfunction cloneRegexp(re)\n\t{\n\t\tlet flags = (re.flags || '');\n\n\t\tif (flags.indexOf('g') === -1)\n\t\t{\n\t\t\tflags += 'g';\n\t\t}\n\n\t\t// @ts-ignore\n\t\tlet r = new (cache.useRegExpCJK || RegExp)(re, flags);\n\n\t\treturn r\n\t}\n\n\t//console.log(_out);\n\n\treturn _out;\n}\n\nexport function splitChapterSync<O extends Partial<ISplitCache>>(txt: IContext, cache: O, _m: ISplitMatch, splitOption: ISplitOption): IDataChapter<string>\n{\n\tlet _files: IDataChapter = {};\n\tlet idx = 0;\n\n\tlet { cb, ignoreCb, ignoreRe } = splitOption;\n\n\ttxt = String(txt);\n\n\tcache.txt = txt;\n\n\tlet m_last;\n\n\tlet i: string;\n\tlet ix = cache.ix || 0;\n\tlet ii: string;\n\n\tfor (i in _m)\n\t{\n\t\tii = (parseInt(i) + ix).toString();\n\n\t\tlet m = _m[i];\n\n\t\tif (ignoreRe)\n\t\t{\n\t\t\tif (ignoreRe.test(m.match))\n\t\t\t{\n\t\t\t\t/**\n\t\t\t\t * @todo here maybe will has bug, need test\n\t\t\t\t */\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tignoreRe.lastIndex = 0;\n\t\t}\n\n\t\tif (!m_last && idx == 0 && m.index != 0)\n\t\t{\n\t\t\t//console.log(m);\n\n\t\t\tlet id = padIndex(ii, 5, '0');\n\t\t\tlet name = 'unknow';\n\n\t\t\tif (ignoreCb && ignoreCb({\n\t\t\t\ti,\n\t\t\t\tid,\n\t\t\t\tname,\n\t\t\t\tm,\n\t\t\t\tm_last,\n\t\t\t\t_files,\n\t\t\t\tii,\n\t\t\t\tcache,\n\t\t\t\tidx,\n\t\t\t}))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (cb)\n\t\t\t{\n\t\t\t\tlet _ret = cb({\n\t\t\t\t\ti,\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tm,\n\t\t\t\t\tm_last,\n\t\t\t\t\t_files,\n\t\t\t\t\tii,\n\t\t\t\t\tcache,\n\t\t\t\t\tidx,\n\t\t\t\t});\n\n\t\t\t\tif (_ret)\n\t\t\t\t{\n\t\t\t\t\tid = _ret.id;\n\t\t\t\t\tname = _ret.name;\n\t\t\t\t\tidx = _ret.idx;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tname = id + '_' + name;\n\n\t\t\tlet txt_clip = txt.slice(idx, m.index);\n\n\t\t\tif (txt_clip)\n\t\t\t{\n\t\t\t\t_files[name] = txt_clip;\n\n\t\t\t\tidx = m.index;\n\t\t\t}\n\t\t}\n\t\telse if (m_last)\n\t\t{\n\t\t\tlet id = padIndex(ii, 5, '0');\n\t\t\tlet name = fix_name(m_last.match);\n\n\t\t\tif (ignoreCb && ignoreCb({\n\t\t\t\ti,\n\t\t\t\tid,\n\t\t\t\tname,\n\t\t\t\tm,\n\t\t\t\tm_last,\n\t\t\t\t_files,\n\t\t\t\tii,\n\t\t\t\tcache,\n\t\t\t\tidx,\n\t\t\t}))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (cb)\n\t\t\t{\n\t\t\t\tlet _ret = cb({\n\t\t\t\t\ti,\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tm,\n\t\t\t\t\tm_last,\n\t\t\t\t\t_files,\n\t\t\t\t\tii,\n\t\t\t\t\tcache,\n\t\t\t\t\tidx,\n\t\t\t\t});\n\n\t\t\t\tif (_ret)\n\t\t\t\t{\n\t\t\t\t\tid = _ret.id;\n\t\t\t\t\tname = _ret.name;\n\t\t\t\t\tidx = _ret.idx;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//console.log(id, name, _ret);\n\n\t\t\tname = id + '_' + name;\n\n\t\t\t//console.log([name]);\n\n\t\t\t//name = `${id}_Act：${StrUtil.toFullWidth(i.padStart(3, '0'))}`;\n\n\t\t\tlet txt_clip = txt.slice(idx, m.index);\n\n\t\t\tif (txt_clip)\n\t\t\t{\n\t\t\t\t_files[name] = txt_clip;\n\n\t\t\t\tidx = m.index;\n\t\t\t}\n\t\t}\n\n\t\tm_last = m;\n\t}\n\n\tif (idx < txt.length - 1)\n\t{\n\t\tii = (parseInt(i) + ix + 1).toString();\n\n\t\tlet id = padIndex(ii, 5, '0');\n\t\tlet name = fix_name(m_last.match);\n\n\t\tif (cb)\n\t\t{\n\t\t\tlet m;\n\n\t\t\tlet _ret = cb({\n\t\t\t\ti,\n\t\t\t\tid,\n\t\t\t\tname,\n\t\t\t\tm,\n\t\t\t\tm_last,\n\t\t\t\t_files,\n\t\t\t\tii,\n\t\t\t\tcache,\n\t\t\t\tidx,\n\t\t\t});\n\n\t\t\tif (_ret)\n\t\t\t{\n\t\t\t\tid = _ret.id;\n\t\t\t\tname = _ret.name;\n\t\t\t\tidx = _ret.idx;\n\t\t\t}\n\t\t}\n\n\t\tname = (id !== '' ? id + '_' : '') + name;\n\n\t\t_files[name] = txt.slice(idx);\n\t}\n\n\tcache.ix = parseInt(ii) + 1;\n\n\treturn _files;\n}\n"]}