{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":"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","sourcesContent":["import novelText from 'novel-text';\nimport { console } from './console';\nimport { makeOptions } from './index';\nimport { IContext, IDataVolume, IOptionsWithData, IPathLike, Resolvable } from './interface';\nimport Bluebird = require('bluebird');\nimport iconv = require('iconv-jschardet');\nimport StrUtil = require('str-util');\nimport { crlf, LF } from 'crlf-normalize';\n\nexport function logWarn(...argv)\n{\n\treturn console.warn(...argv)\n}\n\nexport function chkEncoding(data: IContext, file?: string)\n{\n\tlet chk = iconv.detect(data);\n\n\tif (data.length === 0)\n\t{\n\t\tlogWarn(file, '此檔案沒有內容');\n\t}\n\telse if (chk.encoding != 'UTF-8')\n\t{\n\t\tlogWarn(file, '此檔案可能不是 UTF8 請檢查編碼或利用 MadEdit 等工具轉換', chk);\n\t}\n\n\treturn chk\n}\n\nexport function padIndex(n: number | string, maxLength: number = 5, fillString: string | number = '0')\n{\n\tlet s = padIndexStart(n, maxLength - 1, fillString);\n\n\treturn padIndexEnd(s, maxLength, fillString);\n}\n\nexport function padIndexStart(n: number | string, maxLength: number = 4, fillString: string | number = '0')\n{\n\tif (!['number', 'string'].includes(typeof n))\n\t{\n\t\tthrow TypeError(`n must is string | number`)\n\t}\n\n\treturn String(n).padStart(maxLength, String(fillString))\n}\n\nexport function padIndexEnd(n: number | string, maxLength: number = 5, fillString: string | number = '0')\n{\n\tif (!['number', 'string'].includes(typeof n))\n\t{\n\t\tthrow TypeError(`n must is string | number`)\n\t}\n\n\treturn String(n).padEnd(maxLength, String(fillString))\n}\n\nexport function _wrapMethod<R, F extends (...args: unknown[]) => Resolvable<R>>(fn: F): (...args: Parameters<F>) => Bluebird<R>\n{\n\treturn Bluebird.method(fn)\n}\n\nexport function _handleReadFile(data: IContext, file: IPathLike)\n{\n\tchkEncoding(data, file);\n\n\treturn crlf(novelText.trim(String(data)), LF)\n}\n\nexport function _outputFile<O extends Partial<IOptionsWithData>>(data: IDataVolume | IOptionsWithData, options?: O): {\n\tdata: IDataVolume,\n\toptions: O,\n}\n{\n\tif (data.data)\n\t{\n\t\toptions = Object.assign({}, data.options, options);\n\t\tdata = (data as IOptionsWithData).data;\n\t}\n\n\toptions = makeOptions(options.file, options);\n\n\treturn { data, options }\n}\n\nexport function fix_name(name: string): string\n{\n\tname = novelText.trim(name, {\n\t\ttrim: true,\n\t}).trim()\n\t//.replace('章', '話')\n\t;\n\n\tif (!/^\\d+/.test(name))\n\t{\n\t\tname = StrUtil.zh2num(name).toString();\n\t}\n\n\tname = name\n\t//.replace(/^(\\d+)[\\-話话\\s]*/, '$1　')\n\t\t.replace(/[“”]/g, '')\n\t;\n\n\tname = StrUtil.zh2jp(name);\n\n\t//console.log([name]);\n\n\treturn name;\n}\n"]}