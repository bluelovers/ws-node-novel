{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAEH,sCAAuC;AAEvC,mDAA0C;AAC1C,uCAAmC;AACnC,qCAAmF;AAInF,SAAgB,SAAS,CAAC,KAAa;IAEtC,KAAK,GAAG,qBAAI,CAAC,gBAAS,CAAC,KAAK,CAAC,EAAE,mBAAE,CAAC,CAAC;IAEnC,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC;IAC7B,IAAI,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAErC,IAAI,WAAW,GAAG,kBAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC;IAE/C,IAAI,oBAA4B,CAAC;IAEjC;QACC,IAAI,CAAC,GAAG,kBAAW,CAAC,KAAK,CAAC;aACxB,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC;aACxB,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAC1B;QAED,oBAAoB,GAAG,kBAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;QAEhD,IAAI,iBAAU,CAAC,CAAC,CAAC,CAAC,MAAM,EACxB;YACC,oBAAoB,IAAI,CAAC,CAAC;SAC1B;KACD;IAED,IAAI,YAAY,GAAG,kBAAO,CAAC,mDAAmD,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC;IAC9F,IAAI,SAAS,GAAG,kBAAO,CAAC,6CAA6C,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC;IAIrF,IAAI,kBAA0B,CAAC;IAE/B;QACC,IAAI,CAAC,GAAG,wBAAiB,CAAC,KAAK,CAAC,CAAC;QAEjC,kBAAkB,GAAG,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC;KAC1C;IAED,IAAI,YAAoB,CAAC;IAEzB;QACC,IAAI,CAAC,GAAG,kBAAW,CAAC,KAAK,CAAC,CAAC;QAE3B,YAAY,GAAG,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC;KACpC;IAED,OAAO;QACN;;WAEG;QACH,SAAS;QACT;;;WAGG;QACH,UAAU;QACV;;WAEG;QACH,WAAW;QAEX;;WAEG;QACH,oBAAoB;QAEpB;;WAEG;QACH,YAAY;QACZ;;WAEG;QACH,SAAS;QAET;;WAEG;QACH,kBAAkB;QAElB;;WAEG;QACH,YAAY;KACZ,CAAA;AACF,CAAC;AArFD,8BAqFC;AAED;;GAEG;AACH,SAAgB,cAAc,CAAuB,GAAQ;IAE5D,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;QAE/B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACf,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;YAExB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,CAAC,CACF;QAED,OAAO,CAAC,CAAA;IACT,CAAC,EAAE,EAAc,CAAC,CAAA;AACnB,CAAC;AAbD,wCAaC","sourcesContent":["/**\n * Created by user on 2019/2/23.\n */\n\nimport UString = require('uni-string');\nimport { array_unique } from 'array-hyper-unique';\nimport { crlf, LF } from 'crlf-normalize';\nimport { execall } from 'execall2';\nimport { removeBom, removeLine, removePunctuation, removeSpace } from './lib/util';\n\nexport type ITxtReport = ReturnType<typeof txtReport>;\n\nexport function txtReport(input: string)\n{\n\tinput = crlf(removeBom(input), LF);\n\n\tlet js_length = input.length;\n\tlet uni_length = UString.size(input);\n\n\tlet line_length = execall(/\\n/g, input).length;\n\n\tlet no_blank_line_length: number;\n\n\t{\n\t\tlet s = removeSpace(input)\n\t\t\t.replace(/\\n{2,}/g, '\\n')\n\t\t\t.replace(/^\\n+|\\n+$/g, '')\n\t\t;\n\n\t\tno_blank_line_length = execall(/\\n/g, s).length;\n\n\t\tif (removeLine(s).length)\n\t\t{\n\t\t\tno_blank_line_length += 1;\n\t\t}\n\t}\n\n\tlet hanzi_length = execall(/[\\u3400-\\u4DBF\\u4E00-\\u9FFF\\u{20000}-\\u{2FA1F}]/ug, input).length;\n\tlet ja_length = execall(/[\\u3040-\\u309F\\u30A0-\\u30FF\\u31F0-\\u31FF]/ug, input).length;\n\n\n\n\tlet punctuation_length: number;\n\n\t{\n\t\tlet s = removePunctuation(input);\n\n\t\tpunctuation_length = js_length - s.length;\n\t}\n\n\tlet space_length: number;\n\n\t{\n\t\tlet s = removeSpace(input);\n\n\t\tspace_length = js_length - s.length;\n\t}\n\n\treturn {\n\t\t/**\n\t\t * js string (轉換分行為 LF 之後的長度)\n\t\t */\n\t\tjs_length,\n\t\t/**\n\t\t * uni-string 一般狀況下會等於 js string\n\t\t * 但如果有特殊字元或者 emoji 之類 就會產生差異\n\t\t */\n\t\tuni_length,\n\t\t/**\n\t\t * line 斷行\n\t\t */\n\t\tline_length,\n\n\t\t/**\n\t\t * line 斷行 (不包含空白行)\n\t\t */\n\t\tno_blank_line_length,\n\n\t\t/**\n\t\t * 漢字 (包含中文以外的漢字)\n\t\t */\n\t\thanzi_length,\n\t\t/**\n\t\t * hiragana (平假名) + katakana (片假名)\n\t\t */\n\t\tja_length,\n\n\t\t/**\n\t\t * punctuation 標點符號 與 其他符號\n\t\t */\n\t\tpunctuation_length,\n\n\t\t/**\n\t\t * 非斷行以外的空白\n\t\t */\n\t\tspace_length,\n\t}\n}\n\n/**\n * 將多個報告總和起來\n */\nexport function txtReportMerge<T extends ITxtReport>(arr: T[])\n{\n\treturn arr.reduce(function (a, b)\n\t{\n\t\tObject.entries(b)\n\t\t\t.forEach(function ([k, v])\n\t\t\t{\n\t\t\t\ta[k] = (a[k] || 0) + v;\n\t\t\t})\n\t\t;\n\n\t\treturn a\n\t}, {} as any as T)\n}\n\n"]}