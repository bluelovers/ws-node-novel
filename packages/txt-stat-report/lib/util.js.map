{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAEH,2DAA0E;AAE7D,QAAA,iBAAiB,GAAG,UAAU,CAAC;IAC3C,oBAAoB;IACpB,0MAA0M;IAC1M,0DAA0D;IAC1D,+BAA+B;IAC/B,mBAAmB;CACnB,CAAC,CAAC;AAEH,SAAgB,iBAAiB,CAAC,KAAa;IAE9C,OAAO,KAAK;SACV,OAAO,CAAC,yBAAiB,EAAE,EAAE,CAAC,CAK9B;AACH,CAAC;AATD,8CASC;AAED,SAAgB,WAAW,CAAC,KAAa;IAExC,OAAO,KAAK;SACV,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC;QAE3B,OAAO,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAA;IAClC,CAAC,CAAC;SACD,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAC1B;AACH,CAAC;AATD,kCASC;AAED,SAAgB,UAAU,CAAC,KAAa;IAEvC,OAAO,KAAK;SACV,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CACxB;AACH,CAAC;AALD,gCAKC;AAED;;GAEG;AACH,SAAgB,UAAU,CAAmB,IAAS;IAErD,IAAI,MAAM,GAAa,EAAE,CAAC;IAC1B,IAAI,KAAK,GAAa,EAAE,CAAC;IAEzB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAEvB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAEtB,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,2CAAsB,CAAC,MAAM,CAAC,CAAC;IAC/B,2CAAsB,CAAC,KAAK,CAAC,CAAC;IAE9B,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACrD,CAAC;AAhBD,gCAgBC;AAED,SAAgB,SAAS,CAAC,KAAa;IAEtC,OAAO,KAAK;SACV,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CACvB;AACH,CAAC;AALD,8BAKC","sourcesContent":["/**\n * Created by user on 2019/2/23.\n */\n\nimport { array_unique, array_unique_overwrite } from 'array-hyper-unique';\n\nexport const regexpPunctuation = regexMerge([\n\t/\\p{Punctuation}+/gu,\n\t/[\\u2000-\\u206F\\u2E00-\\u2E7F\\uff00-\\uff0f\\uff1a-\\uff20\\uff3b-\\uff40\\uff5b-\\uff65\\uffe0-\\uffef\\u2500-\\u257f\\u2200-\\u22ff\\u25A0-\\u25FF\\u2600-\\u26F0\\u2190-\\u21FF\\u02b9-\\u02df\\u02E4-\\u02f0\\u2580-\\u259F]+/ug,\n\t/[\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007F]/gu,\n\t/[\\u00A1-\\u00BF\\u00D7\\u00F7]/gu,\n\t/[\\u2100-\\u214F]/gu,\n]);\n\nexport function removePunctuation(input: string)\n{\n\treturn input\n\t\t.replace(regexpPunctuation, '')\n\t\t//.replace(/\\p{Punctuation}+/gu, '')\n\t\t//.replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\uff00-\\uff0f\\uff1a-\\uff20\\uff3b-\\uff40\\uff5b-\\uff65\\uffe0-\\uffef\\u2500-\\u257f\\u2200-\\u22ff\\u25A0-\\u25FF\\u2600-\\u26F0\\u2190-\\u21FF\\u02b9-\\u02df\\u02E4-\\u02f0\\u2580-\\u259F]/ug, '')\n\t\t//.replace(/[⋯]+/gu, '')\n\t\t//.replace(/['!\"#$%&()*+,\\-.\\/\\\\:;<=>?@\\[\\]^_`{|}~°№÷×−¦]/ug, '')\n\t\t;\n}\n\nexport function removeSpace(input: string)\n{\n\treturn input\n\t\t.replace(/\\s+/g, function (s)\n\t\t{\n\t\t\treturn s.replace(/[^\\r\\n]+/g, '')\n\t\t})\n\t\t.replace(/[\\xA0 　]+/gu, '')\n\t\t;\n}\n\nexport function removeLine(input: string)\n{\n\treturn input\n\t\t.replace(/[\\r\\n]+/gu, '')\n\t\t;\n}\n\n/**\n * 合併多個 regexp 為一個\n */\nexport function regexMerge<T extends RegExp>(list: T[])\n{\n\tlet source: string[] = [];\n\tlet flags: string[] = [];\n\n\tlist.forEach(function (a)\n\t{\n\t\tsource.push(a.source);\n\n\t\ta.flags && flags.push(...a.flags.split(''));\n\t});\n\n\tarray_unique_overwrite(source);\n\tarray_unique_overwrite(flags);\n\n\treturn new RegExp(source.join('|'), flags.join(''));\n}\n\nexport function removeBom(input: string)\n{\n\treturn input\n\t\t.replace(/\\uFEFF/gu, '')\n\t\t;\n}\n"]}