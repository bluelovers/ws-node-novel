{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2019/5/29.\n */\n\nimport getMinMidMax from 'blank-line';\nimport crlf, { LF } from 'crlf-normalize';\nimport { envVal } from 'env-bool';\nimport { array_unique } from 'array-hyper-unique';\nimport {\n\tEnumLF,\n\tICacheMap,\n\tIConstructorOptions,\n\tIRegExpCallback,\n\tIReplaceOptions,\n\tITextLayoutOptions,\n\tIToStrOptions, ITrimOptionsUser,\n\tIWordsAll,\n\tIWordsParsed,\n\tIWordsRuntime,\n\tICacheMapRow,\n} from './types';\nimport { _isIwordsArray, _isIwordsArray2, _isIwordsUserSp, _handleTextLayout } from './util';\nimport StrUtil = require('str-util');\n\nexport const SP_KEY = \"#_@_#\";\nexport const SP_REGEXP = \"(?:@|（·?）|-|/|\\\\(\\\\)|%|￥|_|\\\\?|？|\\\\||#|\\\\$|[（\\\\(](?:和谐|河蟹)[\\\\)）]|（河）（蟹）|[（\\\\(][河蟹]{1,2}[\\\\)）]| |\\\\.|[・·]|\\\\*|□|圌|[=＝]|\\\\\\\\\\\\\\\\|\\\\/\\\\/|｜)\";\n\n/**\n * 排版處理核心\n */\nexport class TextLayout\n{\n\tpublic readonly SP_KEY: string = SP_KEY;\n\tpublic readonly SP_REGEXP: string = SP_REGEXP;\n\n\tprotected _RegExpClass: typeof RegExp;\n\n\tprotected _cache_ = {\n\t\treplace: [] as {\n\t\t\told: string[],\n\t\t\tnew: string[],\n\t\t\tdata?,\n\t\t}[],\n\t\twords: new Map() as ICacheMap,\n\t};\n\n\tprotected _data_ = {\n\t\tm0: /([^a-z0-9\\-\\.\\s])?([a-z0-9\\-\\.]+(?:[a-z0-9\\-\\.\\s]+[a-z0-9\\-\\.]+)?)([^a-z0-9\\-\\.\\s])?/uig,\n\t\tr1: /[「」①→\\'\\\":\\-\\+（）╮（╯＿╰）╭\\(\\)\\[\\]■【】《》~～“”‘’:：：，*＊@。ω・、。`\\u3000─一\\d『』◆~、？！\\?\\!×\\.\\<\\>=…・]/i,\n\n\t\trtrim: /[ \\t\\uFEFF\\xA0\\u3000]+$/,\n\n\t\twords: [] as IWordsRuntime[],\n\t};\n\tprotected options: IConstructorOptions = null;\n\n\tconstructor(options?: IConstructorOptions, ...argv)\n\t{\n\t\tlet arr: string[] = (options && options.words_block) ? options.words_block.slice() : [];\n\n\t\tif (options)\n\t\t{\n\t\t\tif (options.rtrim)\n\t\t\t{\n\t\t\t\tthis._data_.rtrim = options.rtrim;\n\t\t\t}\n\n\t\t\tif (options.words)\n\t\t\t{\n\t\t\t\tthis._data_.words = options.words;\n\t\t\t}\n\n\t\t\tif (options.m0)\n\t\t\t{\n\t\t\t\tthis._data_.m0 = options.m0;\n\t\t\t}\n\n\t\t\tif (options.r1)\n\t\t\t{\n\t\t\t\tthis._data_.r1 = options.r1;\n\t\t\t}\n\n\t\t\tif (options.SP_KEY)\n\t\t\t{\n\t\t\t\tthis.SP_KEY = options.SP_KEY;\n\t\t\t}\n\n\t\t\tif (options.SP_REGEXP)\n\t\t\t{\n\t\t\t\tlet v: string | RegExp = options.SP_REGEXP;\n\n\t\t\t\tif (v instanceof RegExp)\n\t\t\t\t{\n\t\t\t\t\tv = v.source;\n\t\t\t\t}\n\n\t\t\t\tthis.SP_REGEXP = v;\n\t\t\t}\n\n\t\t\tif (options.RegExpClass)\n\t\t\t{\n\t\t\t\tthis._RegExpClass = options.RegExpClass;\n\t\t\t}\n\t\t}\n\n\t\tthis.options = options || null;\n\n\t\tthis._init(arr);\n\t}\n\n\tpublic static create(options?: IConstructorOptions, ...argv)\n\t{\n\t\treturn new this(options, ...argv);\n\t}\n\n\tprotected _init(arr: string[])\n\t{\n\t\tthis._data_.words = this._words1(arr, this._data_.words as any);\n\t\tthis._data_.words = this._words2(this._data_.words as any);\n\t}\n\n\tpublic get RegExp(): typeof RegExp\n\t{\n\t\treturn this._RegExpClass || RegExp;\n\t}\n\n\t/**\n\t * 簡易型樣式處理 適用於 屏蔽字或者人名或者因為編碼問題而變成 ? 那些之類的點\n\t *\n\t * @private\n\t */\n\t_words1(arr: string[], words: IWordsParsed[] = []): IWordsRuntime[]\n\t{\n\t\tconst SP_REGEXP = this.SP_REGEXP;\n\t\tconst RC = this.RegExp;\n\n\t\tarray_unique(arr)\n\t\t\t.forEach(function (value)\n\t\t\t{\n\t\t\t\tlet a = value.split('@');\n\n\t\t\t\t/*\n\t\t\t\t_self._data_.words.push({\n\t\t\t\t\ts: new RegExp(`(${a[0]})${r}(${a[1]})`, 'g'),\n\t\t\t\t\tr: '$1$2',\n\t\t\t\t});\n\t\t\t\t*/\n\n\t\t\t\tlet s = a.join(`)${SP_REGEXP}(`);\n\n\t\t\t\twords.push({\n\t\t\t\t\ts: new RC(`(${s})`, 'g'),\n\t\t\t\t\tr: a.map(function (value, index, array)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '$' + (index + 1);\n\t\t\t\t\t}).join(''),\n\t\t\t\t});\n\t\t\t})\n\t\t;\n\n\t\treturn words;\n\t}\n\n\t/**\n\t * 將樣式轉換成實際使用的樣式物件\n\t *\n\t * @private\n\t */\n\t_words2(words: IWordsAll[]): IWordsRuntime[]\n\t{\n\t\tconst SP_REGEXP = this.SP_REGEXP;\n\t\tconst RC = this.RegExp;\n\n\t\treturn words.map(function (value: IWordsAll, index, array)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\tif (value.no_regex)\n\t\t\t{\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif (_isIwordsArray(value))\n\t\t\t{\n\t\t\t\tvalue = {\n\t\t\t\t\t_source: value,\n\n\t\t\t\t\ts: value[0],\n\t\t\t\t\tr: value[1],\n\n\t\t\t\t\tflags: value[2],\n\t\t\t\t} as IWordsParsed;\n\t\t\t}\n\n\t\t\tif (_isIwordsArray2(value))\n\t\t\t{\n\t\t\t\treturn value[0];\n\t\t\t}\n\t\t\telse if (_isIwordsUserSp(value))\n\t\t\t{\n\t\t\t\tif (!value._source) value._source = value.s;\n\n\t\t\t\tlet a = value.s.split(SP_KEY);\n\t\t\t\tlet s = a.join(`)${SP_REGEXP}(`);\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue.s = new RC(`(${s})`, value.flags ? value.flags : 'g');\n\n\t\t\t\t//console.log(value.s);\n\n\t\t\t\tif (value.r === null)\n\t\t\t\t{\n\t\t\t\t\tvalue.r = a.map(function (value, index, array)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '$' + (index + 1);\n\t\t\t\t\t}).join('');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (typeof value.s == 'string')\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (!value._source) value._source = value.s;\n\n\t\t\t\tvalue.s = new RC(value.s, value.flags ? value.flags : 'g');\n\t\t\t}\n\t\t\telse if (typeof value.fn == 'function')\n\t\t\t{\n\t\t\t\treturn value.fn;\n\t\t\t}\n\n\t\t\treturn value as any;\n\t\t});\n\t}\n\n\treplace(text, options: IReplaceOptions = {}): string\n\t{\n\t\tif (!text || !/[^\\s]/.test(text))\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tlet _self = this;\n\n\t\tlet _ret = this.toStr(text)\n\t\t\t.replace(_self._data_.rtrim, '')\n\t\t;\n\n\t\tif (options.pad_eng)\n\t\t{\n\t\t\t_ret = this.paddingEng(_ret);\n\t\t}\n\n\t\tif (options.words)\n\t\t{\n\t\t\t_ret = this.replace_words(_ret, _self._data_.words, _self._cache_.words).value;\n\t\t}\n\n\t\treturn _ret;\n\t}\n\n\treplace_words(_ret: string, words: IWordsRuntime[], cacheMap?: ICacheMap | true)\n\t{\n\t\tif (cacheMap)\n\t\t{\n\t\t\tif (cacheMap === true)\n\t\t\t{\n\t\t\t\tcacheMap = new Map();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcacheMap = null as ICacheMap;\n\t\t}\n\n\t\tfor (let value of words)\n\t\t{\n\t\t\tlet _new: string;\n\n\t\t\tif (typeof value == 'function')\n\t\t\t{\n\t\t\t\t_new = value(_ret, cacheMap as ICacheMap);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet _r = value.s;\n\n\t\t\t\t_new = _ret.replace(_r, value.r as IRegExpCallback);\n\t\t\t}\n\n\t\t\tif (cacheMap && _new !== _ret)\n\t\t\t{\n\t\t\t\tlet myMap = [] as {\n\t\t\t\t\told: string,\n\t\t\t\t\tnew: string,\n\t\t\t\t}[];\n\n\t\t\t\tif (cacheMap.has(value))\n\t\t\t\t{\n\t\t\t\t\tmyMap = cacheMap.get(value) as {\n\t\t\t\t\t\told: string,\n\t\t\t\t\t\tnew: string,\n\t\t\t\t\t}[];\n\t\t\t\t}\n\n\t\t\t\tmyMap.push({\n\t\t\t\t\told: _ret,\n\t\t\t\t\tnew: _new,\n\t\t\t\t});\n\n\t\t\t\tcacheMap.set(value, myMap);\n\t\t\t}\n\n\t\t\t_ret = _new;\n\n\t\t\tif (!/[\\S]/.test(_ret))\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: _ret as string,\n\t\t\tcache: cacheMap,\n\t\t};\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tpaddingEng(text: string)\n\t{\n\t\tlet _self = this;\n\n\t\treturn this.toStr(text)\n\t\t\t.replace(_self._data_.m0, function (...argv)\n\t\t\t{\n\t\t\t\tif (argv[2])\n\t\t\t\t{\n\t\t\t\t\tlet old = argv[2];\n\n\t\t\t\t\tif (argv[2].length > 1 && argv[1] && !_self._data_.r1.test(argv[1]))\n\t\t\t\t\t{\n\t\t\t\t\t\targv[2] = ' ' + argv[2];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (argv[3] && !_self._data_.r1.test(argv[3]))\n\t\t\t\t\t{\n\t\t\t\t\t\targv[2] = argv[2] + ' ';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (old != argv[2])\n\t\t\t\t\t{\n\t\t\t\t\t\t_self._cache_.replace.push({\n\t\t\t\t\t\t\told,\n\t\t\t\t\t\t\tnew: argv[2],\n\n\t\t\t\t\t\t\tdata: argv,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t//console.debug([old, argv[2]], argv);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (argv[1] || '') + argv[2].replace(/( ){2,}/g, '$1') + (argv[3] || '');\n\t\t\t\t}\n\n\t\t\t\treturn argv[0];\n\t\t\t})\n\t\t\t;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tclearLF(text: string)\n\t{\n\t\treturn this.trim(text)\n\t\t\t.replace(/\\n{4,}/g, '\\n\\n')\n\t\t\t.replace(/\\n{3,}/g, '\\n\\n')\n\t\t\t;\n\t}\n\n\ttrim(text: Buffer | string | number, options?: ITrimOptionsUser): string\n\t{\n\t\tif (typeof options == 'boolean')\n\t\t{\n\t\t\toptions = {\n\t\t\t\ttrim: options,\n\t\t\t}\n\t\t}\n\t\telse if (typeof options == 'string')\n\t\t{\n\t\t\toptions = {\n\t\t\t\ttrim: options,\n\t\t\t}\n\t\t}\n\n\t\tlet ret = this.toStr(text, options)\n\t\t\t.replace(/[ \\t\\u3000\\xA0\\u3000]+\\n/g, '\\n')\n\t\t\t.replace(/^\\n+|[\\s\\u3000\\xA0\\u3000]+$/g, '')\n\t\t;\n\n\t\tif (options)\n\t\t{\n\t\t\tif (typeof options.trim == 'string')\n\t\t\t{\n\t\t\t\tret = StrUtil.trim(ret, '\\u3000' + options.trim);\n\t\t\t}\n\t\t\telse if (options.trim)\n\t\t\t{\n\t\t\t\tret = StrUtil.trim(ret, '\\u3000');\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * 轉換為文字並且標準化\n\t */\n\ttoStr(str: Buffer | string | number | unknown, options?: string | IToStrOptions): string\n\t{\n\t\tif (typeof options == 'string')\n\t\t{\n\t\t\toptions = {\n\t\t\t\tLF: options,\n\t\t\t};\n\t\t}\n\n\t\toptions = Object.assign({\n\t\t\tLF: \"\\n\",\n\t\t\tallow_nbsp: false,\n\t\t\tallow_bom: false,\n\t\t}, options);\n\n\t\tlet ret = crlf(str.toString(), options.LF || LF)\n\t\t\t//.replace(/\\r\\n|\\r(?!\\n)|\\n/g, options.LF || \"\\n\")\n\t\t\t// http://www.charbase.com/202a-unicode-left-to-right-embedding\n\n\t\t\t/*\n\t\t\t.replace(/[\\u2000-\\u200F]/g, '')\n\t\t\t.replace(/[\\u2028-\\u202F]/g, '')\n\t\t\t.replace(/[\\u205F-\\u2060]/g, '')\n\t\t\t*/\n\t\t;\n\n\t\tret = StrUtil.normalize(ret, options);\n\n\t\t/*\n\t\tif (!options.allow_bom)\n\t\t{\n\t\t\tret = ret.replace(/\\uFEFF/g, '');\n\t\t}\n\n\t\tif (!options.allow_nbsp)\n\t\t{\n\t\t\tret = ret.replace(/[  \\xA0]/g, ' ');\n\t\t}\n\t\t*/\n\n\t\treturn ret;\n\t}\n\n\tfixOptions(options: ITextLayoutOptions)\n\t{\n\t\tObject.entries(options)\n\t\t\t.forEach(([k, v]) => options[k] = envVal(v))\n\t\t;\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\treduceLine<T>(html: T, options: ITextLayoutOptions = {})\n\t{\n\t\toptions = this.fixOptions(options);\n\n\t\tif (options.allow_lf2)\n\t\t{\n\t\t\treturn html;\n\t\t}\n\n\t\tlet old = this.trim(html as any as string, options);\n\n\t\told = //html\n\t\t\t\t\t//.replace(/\\r\\n|\\r(?!\\n)/g, \"\\n\")\n\t\t\told\n\t\t\t\t.replace(/[ \\u3000\\t]+\\n/g, \"\\n\")\n\t\t\t\t.replace(/[\\s\\u3000]+$/g, '')\n\t\t\t\t.replace(/^[\\n \\t]+/g, '')\n\t\t\t\t.replace(/\\n{4,}/g, \"\\n\\n\\n\\n\")\n\t\t;\n\n\t\tlet _html = old;\n\n\t\tif (!_html.match(/[^\\n]\\n[^\\n]/g))\n\t\t{\n\t\t\tlet [min, mid, max] = getMinMidMax(_html.toString());\n\n\t\t\tif (min > 2)\n\t\t\t{\n\t\t\t\toptions.allow_lf2 = false;\n\t\t\t}\n\n\t\t\tif (max >= 3)\n\t\t\t{\n\t\t\t\tif (min > 2)\n\t\t\t\t{\n\t\t\t\t\tlet r = new RegExp(`\\\\n{${min - 1}}(\\\\n+)`, 'g');\n\n\t\t\t\t\t_html = _html\n\t\t\t\t\t//.replace(/\\n{2}(\\n*)/g, '$1')\n\t\t\t\t\t\t.replace(r, '$1')\n\t\t\t\t\t;\n\t\t\t\t}\n\n\t\t\t\t_html = _html\n\t\t\t\t\t.replace(/\\n{3,}/g, \"\\n\\n\\n\")\n\t\t\t\t//.replace(/\\n{2}/g, \"\\n\")\n\t\t\t\t;\n\t\t\t}\n\n\t\t\t//console.log(options);\n\n\t\t\tif (!options.allow_lf2)\n\t\t\t{\n\t\t\t\t_html = _html\n\t\t\t\t\t.replace(/\\n\\n/g, \"\\n\")\n\t\t\t\t;\n\t\t\t}\n\n\t\t\tif (_html != old)\n\t\t\t{\n\t\t\t\treturn _html;\n\t\t\t}\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * 通用型段落調整\n\t *\n\t * @returns {string}\n\t */\n\ttextlayout(input: any, options: ITextLayoutOptions = {}): string\n\t{\n\t\toptions = this.fixOptions(options);\n\n\t\tlet html = this.trim(input, options);\n\n\t\thtml = html\n\t\t\t\t.replace(/[ \\u3000\\t]+\\n/g, \"\\n\")\n\t\t\t\t.replace(/[\\s\\u3000]+$/g, '')\n\t\t\t\t.replace(/^[\\n \\t]+/g, '')\n\t\t\t\t.replace(/\\n{4,}/g, EnumLF.LF4)\n\t\t;\n\n\t\treturn _handleTextLayout(html, options)\n\t}\n\n}\n\nexport default TextLayout;\n"]}